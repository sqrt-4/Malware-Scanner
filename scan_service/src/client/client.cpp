#include <iostream>
#include <sys/socket.h>
#include <sys/un.h>
#include <string>
#include <unistd.h>
#include <sys/ipc.h>

#define BUFLEN 1024

int main(int argc, char** argv) {
    if (argc != 2) {
        std::cerr << "Invalid number of parameters!\n";
        return -1;
    }
    std::string dir_path = argv[1];
    char buf[BUFLEN];
    int sockfd;
    if ((sockfd = socket(AF_UNIX, SOCK_STREAM, 0)) < 0) {
        std::cerr << "Socket error\n";
        return -1;
    }
    struct sockaddr_un sa;
    memset(&sa, 0, sizeof(sa));
    sa.sun_family = AF_UNIX;
    strcpy(sa.sun_path, "/tmp/a.sock");

    if (connect(sockfd, (struct sockaddr*) &sa, sizeof(sa)) < 0) {
        std::cerr << "Connect Failed\n";
        return -1;
    }
    send(sockfd, dir_path.data(), BUFLEN, 0);
    recv(sockfd, buf, BUFLEN, 0);
    std::string scan_res = buf;
    std::cout << scan_res;

    shutdown(sockfd, 2);
    close(sockfd);
    return 0;
}