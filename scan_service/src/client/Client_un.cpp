#include "Client_un.h"

Client_un::Client_un(const std::string &init_file) {
    sockfd_ = socket(AF_UNIX, SOCK_STREAM, 0);
    if (sockfd_ < 0) {
        throw "Socket error\n";
    }

    memset(&sa_, 0, sizeof(sa_));
    sa_.sun_family = AF_UNIX;
    strcpy(sa_.sun_path, init_file.data());

    if (connect(sockfd_, (struct sockaddr*) &sa_, sizeof(sa_)) < 0) {
        throw "Connection error\n";
    }
}

std::string Client_un::recv() {
    ::recv(sockfd_, buf_, BUFLEN, 0);
    std::string res = buf_;
    return res;
}

void Client_un::send(const std::string &msg) {
    ::send(sockfd_, msg.data(), BUFLEN, 0);
}

Client_un::~Client_un() {
    shutdown(sockfd_, 2);
    close(sockfd_);
}