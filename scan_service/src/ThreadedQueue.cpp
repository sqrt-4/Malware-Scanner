#include "ThreadedQueue.h"

void ThreadedQueue::push(const std::string& item) {
    mtx_.lock();
    queue_.push(item);
    mtx_.unlock();
}

void ThreadedQueue::pop() {
    mtx_.lock();
    if (!queue_.empty()) {
        queue_.pop();
    }
    mtx_.unlock();
}

bool ThreadedQueue::empty() {
    mtx_.lock();
    bool b = queue_.empty();
    mtx_.unlock();
    return b;
}

std::string ThreadedQueue::front() {
    std::string res = "\'";
    mtx_.lock();
    if (!queue_.empty()) {
       res = queue_.front();
    }
    mtx_.unlock();
    return res;
}

std::string ThreadedQueue::back() {
    std::string res = "\'";
    mtx_.lock();
    if (!queue_.empty()) {
        res = queue_.back();
    }
    mtx_.unlock();
    return res;
}

