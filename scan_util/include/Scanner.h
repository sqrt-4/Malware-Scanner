#pragma once
#ifndef KASPERSKY_SB_SCANNER_H
#define KASPERSKY_SB_SCANNER_H

#include <iostream>
#include <string>
#include <regex>
#include <chrono>
#include <array>
#include <thread>
#include <iomanip>
#include <mutex>
#include <sstream>

#include "DetStruct.h"
#include "ThreadedQueue.h"

const int THREADS_LIMIT  = std::thread::hardware_concurrency();

class Scanner {
    std::recursive_mutex mtx_;
protected:
    DetStruct detcount_;
    ThreadedQueue queue_;
    std::vector<std::thread> threads_;
    bool finish_;

    void check_file();
public:
    Scanner();
    void scan_dir(const std::string& dir_path);
    [[nodiscard]] std::string print_results();
    void reset();

};


#endif //KASPERSKY_SB_SCANNER_H
